{"remainingRequest":"/home/vim/Code/akaunt/akaunt-doc/node_modules/vue-loader/lib/index.js??ref--1-1!/home/vim/Code/akaunt/akaunt-doc/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/home/vim/Code/akaunt/akaunt-doc/docs/guide/Statutory Compliance Capabilities.md?vue&type=template&id=cb532450&","dependencies":[{"path":"/home/vim/Code/akaunt/akaunt-doc/docs/guide/Statutory Compliance Capabilities.md","mtime":1686221695238},{"path":"/home/vim/Code/akaunt/akaunt-doc/node_modules/cache-loader/dist/cjs.js","mtime":1686221702879},{"path":"/home/vim/Code/akaunt/akaunt-doc/node_modules/cache-loader/dist/cjs.js","mtime":1686221702879},{"path":"/home/vim/Code/akaunt/akaunt-doc/node_modules/babel-loader/lib/index.js","mtime":1686221703032},{"path":"/home/vim/Code/akaunt/akaunt-doc/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1686221703475},{"path":"/home/vim/Code/akaunt/akaunt-doc/node_modules/cache-loader/dist/cjs.js","mtime":1686221702879},{"path":"/home/vim/Code/akaunt/akaunt-doc/node_modules/vue-loader/lib/index.js","mtime":1686221703162},{"path":"/home/vim/Code/akaunt/akaunt-doc/node_modules/@vuepress/markdown-loader/index.js","mtime":1686221701469}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxDb250ZW50U2xvdHNEaXN0cmlidXRvciA6c2xvdC1rZXk9IiRwYXJlbnQuc2xvdEtleSI+PGgxIGlkPSJzdGF0dXRvcnktY29tcGxpYW5jZS1jYXBhYmlsaXRpZXMiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjc3RhdHV0b3J5LWNvbXBsaWFuY2UtY2FwYWJpbGl0aWVzIj4jPC9hPiBTdGF0dXRvcnkgQ29tcGxpYW5jZSBDYXBhYmlsaXRpZXM8L2gxPgo8cD5Ba2F1bnQgcHJvdmlkZXMgdGhlIGZvbGxvd2luZyBTdGF0dXRvcnkgQ29tcGxpYW5jZSBDYXBhYmlsaXRpZXMgbmFtZWx5LApWYWx1ZSBBZGRlZCBUYXggKFZBVCkKU2VydmljZSBUYXgKVGF4IERlZHVjdGVkIGF0IFNvdXJjZSAoVERTKQpFeGNpc2UgKE1hbnVmYWN0dXJlcnMgJmFtcDsgRGVhbGVycykKRnJpbmdlIEJlbmVmaXQgVGF4IChGQlQpClRheCBDb2xsZWN0ZWQgYXQgU291cmNlIChUQ1MpCkNlbnRyYWwgU2FsZXMgVGF4IChDU1QpCjcuMSBWYWx1ZSBBZGRlZCBUYXggKFZBVCkKQWthdW50IHByb3ZpZGVzIFZBVCBzb2x1dGlvbiB0byBhY3Jvc3MgMzIgc3RhdGVzIGluIEluZGlhIGFuZCBvdGhlciBpbnRlcm5hdGlvbmFsIGNvdW50cmllcwpsaWtlIEluZG9uZXNpYSwgUGhpbGxpcGluZXMgYW5kIEJhbmdsYWRlc2guIFRoZSBWQVQgY29tcGxpYW5jZSBpbiBBa2F1bnQgaXMgY29tcGxldGVseSBpbnRlLQpncmF0ZWQgd2l0aCBBY2NvdW50aW5nLCBJbnZlbnRvcnkgJmFtcDsgUmVwb3J0aW5nIGFuZCBzaW1wbGlmaWVzIHRoZXNlIGFzcGVjdHMgd2l0aCBhYnNvbHV0ZSBlYXNlLAphY2N1cmFjeSBhbmQgc3BlZWQuCkFzIHBlciBWQVQgUmVndWxhdGlvbnMsIGV2ZXJ5IHJlZ2lzdGVyZWQgYnVzaW5lc3MgdW5kZXIgVkFUIGlzIHJlcXVpcmVkIHRvIGdlbmVyYXRlIFZBVApjb21wbGlhbnQgVGF4IEludm9pY2UgYW5kIGZpbGUgU3RhdHV0b3J5IFJldHVybnMgcGVyaW9kaWNhbGx5IGluIHByZXNjcmliZWQgZm9ybXMgYW5kCmRvY3VtZW50cyBvZiB0aGUgcmVzcGVjdGl2ZSBzdGF0ZTwvcD4KPHA+VGF4IERlZHVjdGVkIGF0IFNvdXJjZSAoVERTKQpUYXggRGVkdWN0ZWQgYXQgU291cmNlIGlzIG9uZSBvZiB0aGUgbW9kZXMgb2YgY29sbGVjdGluZyBJbmNvbWUgVGF4IGZyb20gdGhlIHRheHBheWVycyBhcyBwZXIKdGhlIHJhdGVzIG1lbnRpb25lZCB1bmRlciBJVCBBY3QgYW5kIFJ1bGVzLiBUaGUgZGVkdWN0b3Igb2YgdGhlIFRheCAoVERTKSBkZWR1Y3RzIHRoZSB0YXggZnJvbQp0aGUgZGVkdWN0ZWUsIG9uIHBheW1lbnQgb2Ygc3BlY2lmaWVkIEluY29tZXMgYW5kIGRlcG9zaXRzIHRoZSBzYW1lIHRvIHRoZSBjcmVkaXQgb2YgQ2VudHJhbApHb3Zlcm5tZW50IHdpdGhpbiB0aGUgc3BlY2lmaWVkIHBlcmlvZCBhbG9uZ3dpdGggdGhlIGNoYWxsYW4gaW4gcHJlc2NyaWJlZCBmb3JtYXQuCkFrYXVudOKAmXMgVERTIGZlYXR1cmUgaXMgZGVzaWduZWQgdG8gaGFuZGxlIGFsbCB5b3VyIFREUyByZXF1aXJlbWVudHMgZWFzaWx5IGFuZCB3aXRoCmNvbXBsZXRlIGZsZXhpYmlsaXR5LiBJdCBhbGxvd3MgeW91IHRvIGNvbmZpZ3VyZSB0aGUgVERTIGxlZGdlcnMsIGJ5IHNwZWNpZnlpbmcgdGhlIG5hdHVyZSBvZgpwYXltZW50cyBhbmQgdHlwZSBvZiBhc3Nlc3NlZSBhbG9uZyB3aXRoIHRoZSBURFMgcmF0ZXMuCldpdGggdGhlIGhlbHAgb2YgQWthdW50LCB5b3UgY2FuIGdlbmVyYXRlIGFuZCBmaWxlIFF1YXJ0ZXJseS9Nb250aGx5IFJldHVybnMsIENoYWxsYW5zIHZpei4sCkZvcm0xNiBBIGFuZCBDZXJ0aWZpY2F0ZXMgaW4gcHJlc2NyaWJlZCBmb3JtYXRzLiBZb3UgY2FuIGFsc28gZ2VuZXJhdGUgZS1URFMgYW5kIGZpbGUgaW4gTlNETApjb21wYXRpYmxlIGZvcm1hdHMuPC9wPgo8cD5WaWV3IFREUyBSZXBvcnRzCkFrYXVudCBwcm92aWRlcyB0aGUgZm9sbG93aW5nIFREUyBGb3JtcywgQ2hhbGxhbnMgYW5kIFJlcG9ydHMuClREUyBDb21wdXRhdGlvbgpURFMgQ2hhbGxhbiBSZWNvbmNpbGxpYXRpb24KUXVhcnRlcmx5IGVURFMgUmV0dXJucwpGb3JtIDI2UQpBbm5leHVyZSB0byAyNlEKRm9ybSAyN1EKQW5uZXh1cmUgdG8gMjdRCkFubnVhbCBlVERTIFJldHVybnMKRm9ybSAyNgpBbm5leHVyZSB0byAyNgpGb3JtIDI3CkFubmV4dXJlIHRvIDI3Ck91dHN0YW5kaW5ncwpFeGNlcHRpb24gUmVwb3J0czwvcD4KPHA+RXhjaXNlIChNYW51ZmFjdHVyZXIgJmFtcDsgRGVhbGVyKQpBa2F1bnQgcHJvdmlkZXMgY29tcGxldGUgZXhjaXNlIHNvbHV0aW9uIGZvciBtYW51ZmFjdHVyZXJzIGFzIHdlbGwgYXMgZGVhbGVycyBkZWFsaW5nIGluCmV4Y2lzZSBnb29kcy4gSXQgZmFjaWxpdGF0ZXMgZ2VuZXJhdGlvbiBvZiBFeGNpc2UgSW52b2ljZSBmb3IgdHJhZGVycyBhbmQgbWFudWZhY3R1cmVycyAoY292ZXJlZAp1bmRlciB0aGUgQ2VudHJhbCBFeGNpc2UgQWN0KSBhcyBwZXIgUnVsZSAxMSBvZiBDZW50cmFsIEV4Y2lzZSBSdWxlcy4gSXQgYWxsb3dzIHlvdSB0byBtYWludGFpbgpjb21wbGV0ZSBpbmZvcm1hdGlvbiBvZiBwdXJjaGFzZSBhbmQgc2FsZSBvZiBleGNpc2FibGUgZ29vZHMgYW5kIGhlbHBzIGluIHByaW50aW5nIHRoZSBzYW1lIGluCnRoZSBFeGNpc2UgSW52b2ljZS4KV2l0aCB0aGUgaGVscCBvZiBBa2F1bnQsIHlvdSBjYW4gZ2VuZXJhdGUgRXhjaXNlIHJlcG9ydHMgYW5kIHJlZ2lzdGVycyBpbiB0aGUgcHJlc2NyaWJlZApmb3JtYXRzIGZvciBNYW51ZmFjdHVyZXJzIGFuZCBEZWFsZXJzLGFzIHRoZSBjYXNlIG1heSBiZTwvcD4KPHA+RnJpbmdlIEJlbmVmaXQgVGF4ClRoZSBGcmluZ2UgQmVuZWZpdCBUYXggaXMgbGV2aWVkIG9uIGVtcGxveWVyIGluIHJlc3BlY3Qgb2YgZnJpbmdlIGJlbmVmaXRzIHByb3ZpZGVkL2RlZW1lZCB0byBiZQpwcm92aWRlZCBieSBoaW0gdG8gaGlzIGVtcGxveWVlcyBkdXJpbmcgYW55IGZpbmFuY2lhbCB5ZWFyIGNvbW1lbmNpbmcgb24gb3IgYWZ0ZXIgMS40LjIwMDUuIFRoZQpGcmluZ2UgQmVuZWZpdCBUYXggaXMgcGF5YWJsZSBhdCB0aGUgcmF0ZSBhdCB0aGUgMzAlIG9mIHRoZSBhc3Nlc2FibGUgdmFsdWUgb2YgZnJpbmdlIGJlbmVmaXRzLiBJbgpBa2F1bnQsIEZyaW5nZSBCZW5lZml0cyBjbGFzc2lmaWNhdGlvbnMgYXJlIHByZGVmaW5lZCB3aXRoIHRoZSBhc3Nlc3NhYmxlIHZhbHVlIGFuZCB0aGUgcmF0ZQpvZiBGQlQgZm9yIGVhY2ggbmF0dXJlIG9mIEZyaW5nZSBiZW5lZml0cy48L3A+CjxwPlRheCBDb2xsZWN0ZWQgYXQgU291cmNlIChUQ1MpClRDUyBpcyB0aGUgVGF4IENvbGxlY3RlZCBhdCBTb3VyY2UgYnkgeW91IChjb2xsZWN0b3IpIGZyb20gYSBCdXllci9sZXNzZWUgKGNvbGxlY3RlZS9wYXllZSkuIFRoaXMKdGF4IHRvIGJlIGNvbGxlY3RlZCBhdCBzb3VyY2UgaXMgYXBwbGljYWJsZSB0byBnb29kcywgYXMgc3BlY2lmaWVkIHVuZGVyIFNlY3Rpb24gMjA2QyBvZiB0aGUKSW5jb21lIFRheCBBY3QsIDE5NjEuIElmIHRoZSBwdXJjaGFzZSB2YWx1ZSBvZiBnb29kcyBpcyBYLCB0aGUgYW1vdW50IHBheWFibGUgYnkgdGhlIGJ1eWVyIGlzClgrWSwgd2hlcmUgWSBpcyB0aGUgdmFsdWUgb2YgVGF4IGF0IFNvdXJjZS4gVGhlIHNlbGxlciBkZXBvc2l0cyB0aGUgdGF4IGFtb3VudCBZIGF0IGFueSBkZXNpZy0KbmF0ZWQgYnJhbmNoIG9mIGJhbmtzIGF1dGhvcmlzZWQgdG8gcmVjZWl2ZSBzdWNoIHBheW1lbnRzLgpBcyBhIHNlbGxlciwgbGVzc29yIG9yIGxpY2Vuc29yLCB5b3UgYXJlIHJlc3BvbnNpYmxlIGZvciB0aGUgY29sbGVjdGlvbiBvZiB0YXggZnJvbSB0aGUgYnV5ZXIsIGxlc3NlZQpvciBsaWNlbnNlZS4gVGhlIHRheCBpcyBjb2xsZWN0ZWQgZm9yIHNhbGUgb2YgZ29vZHMgb3Igb24gdHJhbnNhY3Rpb25zIHdoaWNoIGludm9sdmUgcmVjZWlwdCBvZgphbW91bnRzIGZyb20gYnV5ZXJzIGluIHRoZSBmb3JtIG9mIGNhc2ggb3IgY2hlcXVlLCBkcmFmdCBvciBhbnkgb3RoZXIgbW9kZS4gVGhlIGNlcnRpZmljYXRlIG9mIGNvbGxlY3Rpb24gb2YKVGF4IGF0IFNvdXJjZSBoYXMgdG8gYmUgc3VibWl0dGVkIGluIEZvcm0gTm8uIDI3RCBieSBwZXJzb25zIGNvbGxlY3RpbmcgdGF4IGF0IHNvdXJjZSB3aXRoaW4gYSB3ZWVrIGZyb20gdGhlCmxhc3QgZGF5IG9mIHRoZSBtb250aCBpbiB3aGljaCB0aGUgdGF4IHdhcyBjb2xsZWN0ZWQuPC9wPgo8cD5DZW50cmFsIFNhbGVzIFRheApDU1QgaXMgYSB0YXggbGV2aWVkIG9uIGludGVyLXN0YXRlIHNhbGVzIG9mIGdvb2RzIGJ5IGRlYWxlcnMgYnkgdGhlIENlbnRyYWwgR292ZXJubWVudC4gQ1NUIGlzCmFwcGxpY2FibGUgb25seSBpZiB5b3Ugc2VsbCBnb29kcyB0byBkZWFsZXJzIGluIG90aGVyIHN0YXRlcyBidXQgbm90IGxldmllZCBvbiBzYWxlcyBtYWRlIGludHJhIHN0YXRlCm9yIG9uIGltcG9ydC9leHBvcnQgc2FsZXMuIFRoZSBJbnRlci1zdGF0ZSBzYWxlIG9jY3VycyB3aGVuIHNhbGUgb3IgcHVyY2hhc2UgY29uc3RpdHV0ZXMKbW92ZW1lbnQgb2YgZ29vZHMgZnJvbSBvbmUgc3RhdGUgdG8gYW5vdGhlci4gQWNjb3JkaW5nbHksIHdoZW4geW91IHNlbmQgY29uc2lnbm1lbnRzIHRvIHlvdXIKYWdlbnRzIG9yIHRyYW5zZmVyIGdvb2RzIHRvIHlvdXIgYnJhbmNoLyBvdGhlciBvZmZpY2VzLCB0aGlzIGlzIG5vdCBhIGNvbnNpZGVyZWQgYXMgc2FsZSB1bmRlciB0aGUKQ1NUIEFjdC4KMTkzU3RhdHV0b3J5IENvbXBsaWFuY2UgQ2FwYWJpbGl0aWVzIGluIEFrYXVudApDU1QgaXMgcGF5YWJsZSBpbiB0aGUgc3RhdGUgZnJvbSB3aGVyZSB5b3Ugc2VsbCB0aGUgZ29vZHMgYW5kIGNvbW1lbmNlIGl0cyBtb3ZlbWVudC4gVGhlIHRheAp5b3UgcGF5IGlzIGNvbGxlY3RlZCBhbmQgcmV0YWluZWQgYnkgdGhlIHN0YXRlIHdoZXJlIHRoZSB0cmFuc2FjdGlvbiBvcmlnaW5hdGVkLiBUaGUgQ1NUIGNvbGxlYy0KdGlvbiBhbmQgYWRtaW5pc3RyYXRpb24gaXMgcGVyZm9ybWVkIGJ5IHRoZSBhdXRob3JpdGllcyBvZiB5b3VyIHN0YXRlJ3MgU2FsZXMgVGF4IERlcHQuIFRodXMsIHRoZQpTdGF0ZSBHb3Zlcm5tZW50IFNhbGVzIFRheCBvZmZpY2VyIHdobyBhc3Nlc3NlcyBhbmQgY29sbGVjdHMgVkFUIChzdGF0ZSkgYWxzbyBjb2xsZWN0cyBhbmQKYXNzZXNzZXMgYW5kIENTVC4KVGhlIENTVCBmZWF0dXJlIGlzIGVuYWJsZWQgYXV0b21hdGljYWxseSBvbmNlIHRoZSBWQVQgZmVhdHVyZSBpcyBlbmFibGVkIGluIEFrYXVudC48L3A+CjwvQ29udGVudFNsb3RzRGlzdHJpYnV0b3I+Cg=="},null]}
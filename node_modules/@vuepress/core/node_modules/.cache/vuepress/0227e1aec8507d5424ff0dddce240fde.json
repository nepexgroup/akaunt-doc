{"remainingRequest":"/home/vim/Code/akaunt/akaunt-doc/node_modules/vue-loader/lib/index.js??ref--1-1!/home/vim/Code/akaunt/akaunt-doc/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/home/vim/Code/akaunt/akaunt-doc/docs/guide/Complete Book-keeping.md?vue&type=template&id=3eee9494&","dependencies":[{"path":"/home/vim/Code/akaunt/akaunt-doc/docs/guide/Complete Book-keeping.md","mtime":1686221695235},{"path":"/home/vim/Code/akaunt/akaunt-doc/node_modules/cache-loader/dist/cjs.js","mtime":1686221702879},{"path":"/home/vim/Code/akaunt/akaunt-doc/node_modules/cache-loader/dist/cjs.js","mtime":1686221702879},{"path":"/home/vim/Code/akaunt/akaunt-doc/node_modules/babel-loader/lib/index.js","mtime":1686221703032},{"path":"/home/vim/Code/akaunt/akaunt-doc/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1686221703475},{"path":"/home/vim/Code/akaunt/akaunt-doc/node_modules/cache-loader/dist/cjs.js","mtime":1686221702879},{"path":"/home/vim/Code/akaunt/akaunt-doc/node_modules/vue-loader/lib/index.js","mtime":1686221703162},{"path":"/home/vim/Code/akaunt/akaunt-doc/node_modules/@vuepress/markdown-loader/index.js","mtime":1686221701469}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxDb250ZW50U2xvdHNEaXN0cmlidXRvciA6c2xvdC1rZXk9IiRwYXJlbnQuc2xvdEtleSI+PGgxIGlkPSJjb21wbGV0ZS1ib29rLWtlZXBpbmciPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjY29tcGxldGUtYm9vay1rZWVwaW5nIj4jPC9hPiBDb21wbGV0ZSBCb29rLWtlZXBpbmc8L2gxPgo8cD5Ba2F1bnQgbWFpbnRhaW5zIGFsbCBib29rcyBvZiBhY2NvdW50cyBzdGFydGluZyBmcm9tIHJlY29yZCBvZiB2b3VjaGVycyB0byBsZWRnZXJzIGV0Yy4gWW91CmNhbiB1c2UgZGlmZmVyZW50IHR5cGVzIG9mIHZvdWNoZXJzIGxpa2UgcGF5bWVudCwgcmVjZWlwdCwgc2FsZXMsIHB1cmNoYXNlcywgcmVjZWlwdCBub3RlcywgZGVsaXZlcnkKbm90ZXMgYW5kIGFkanVzdG1lbnQgZW50cnkgdm91Y2hlcnMgbGlrZSBqb3VybmFscywgZGViaXQgJmFtcDsgY3JlZGl0IG5vdGVzLiBBa2F1bnQgaW5oZXJpdHMgdGhlCnByaW5jaXBsZSBvZiBkb3VibGUgZW50cnkgc3lzdGVtIG9mIGJvb2sga2VlcGluZyBhbmQgdGh1cyByZWR1Y2VzIHBvc3NpYmlsaXRpZXMgb2YgZXJyb3JzIGR1cmluZwp2b3VjaGVyIGVudHJ5LjwvcD4KPGgyIGlkPSJfMS0xLXNpbXBsZS1lYXN5LXZvdWNoZXItZW50cnkiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjXzEtMS1zaW1wbGUtZWFzeS12b3VjaGVyLWVudHJ5Ij4jPC9hPiAxLjEgU2ltcGxlICZhbXA7IEVhc3kgVm91Y2hlciBFbnRyeTwvaDI+CjxwPkFrYXVudCBwcm92aWRlcyBmbGV4aWJpbGl0eSB0byB1c2UgcHJlZGVmaW5lZCB2b3VjaGVyIHR5cGVzLCBjb21wcmlzaW5nIG9mIGFjY291bnRpbmcgYW5kCmludmVudG9yeSB2b3VjaGVyIHR5cGVzIHRvIHJlY29yZCB2YXJpb3VzIGJ1c2luZXNzIHRyYW5zYWN0aW9ucy4gSXQgYWxzbyBhbGxvd3MgeW91IHRvIHVzZQpLZXlib2FyZCBzaG9ydGN1dCBLZXlzIGFzIHdlbGwgYXMgbW91c2Ugb3BlcmF0aW9ucyBkdXJpbmcgdm91Y2hlciBlbnRyeS48L3A+CjxoMiBpZD0iZmxleGlibGUtY2xhc3NpZmljYXRpb24tb2YtYWNjb3VudC1oZWFkcy1jaGFydC1vZi1hY2NvdW50cyI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNmbGV4aWJsZS1jbGFzc2lmaWNhdGlvbi1vZi1hY2NvdW50LWhlYWRzLWNoYXJ0LW9mLWFjY291bnRzIj4jPC9hPiBGbGV4aWJsZSBjbGFzc2lmaWNhdGlvbiBvZiBBY2NvdW50IEhlYWRzIC8gQ2hhcnQgb2YgQWNjb3VudHM8L2gyPgo8cD5UaGVyZSBhcmUgMjggcHJlZGVmaW5lZCBncm91cHMgd2hpY2ggYXJlIHdpZGVseSB1c2VkIGluIENoYXJ0IG9mIEFjY291bnRzIG9mCm1hbnkgdHJhZGluZyBvcmdhbml6YXRpb25zLiBPdXQgb2YgdGhlc2UsIDE1IGdyb3VwcyBhcmUgUHJpbWFyeSBHcm91cHMgYW5kIHRoZSByZW1haW5pbmcgMTMKYXJlIFN1Yi1Hcm91cHMuIEFtb25nIHRoZSAxNSBwcmVkZWZpbmVkIGdyb3VwcywgOSBHcm91cHMgYXJlIEJhbGFuY2UgU2hlZXQgaXRlbXMgYW5kIHRoZQpyZW1haW5pbmcgNiBncm91cHMgYXJlIFByb2ZpdCAmYW1wOyBMb3NzIEEvYyBpdGVtcy4gSG93ZXZlciwgeW91IG1heSBhbHNvIGFsdGVyIHRoZSBub21lbmNsYXR1cmUKb2YgdGhlc2UgcHJlZGVmaW5lZCAyOCBHcm91cHMuPC9wPgo8cD5Ba2F1bnQgYWxsb3dzIHlvdSB0byBkZWZpbmUgQWNjb3VudCBoZWFkcyBhbmQgZ3JvdXBzIGFzIHBlciB5b3VyIHJlcXVpcmVtZW50cywgdGhlcmVieQpmYWNpbGl0YXRpbmcgbXVsdGlwbGUgc3RydWN0dXJhbCBncm91cGluZy4gVGhlIGZsZXhpYmlsaXR5ICZhbXA7IGVhc2Ugb2YgY3JlYXRpbmcgdXNlci1kZWZpbmVkIEFjY291bnQKSGVhZHMgYW5kIGdyb3VwcyAoQ2hhcnQgb2YgQWNjb3VudHMpIGFzIHBlciBuYXR1cmUgb2YgYnVzaW5lc3Mgb3IgYnVzaW5lc3MgcHJhY3RpY2UgbWFrZXMKQWthdW50IHRvIHN1aXQgYnVzaW5lc3NlcyBhY3Jvc3MgaW5kdXN0cmllcywgdmVydGljYWxzIGFuZCBnZW9ncmFwaGllcyB3aXRob3V0IGNoYW5naW5nIHRoZQp3YXkgdGhleSBkbyB0aGVpciBidXNpbmVzcy48L3A+CjxwPkZvciBFZy4sIFlvdSBjYW4gaGF2ZSBkZWJ0b3IncyBiYXNlZCBvbiBnZW9ncmFwaGllcyB2aXouLCBOb3J0aCBEZWJ0b3JzLCBTb3V0aCBEZWJ0b3JzLCBFYXN0CkRlYnRvcnMgJmFtcDsgV2VzdCBEZWJ0b3JzIGFuZCBmdXJ0aGVyIHN1Ymdyb3VwcyBiYXNlZCBvbiBzdGF0ZXMgaS5lLiwgS2FybmF0YWthIERlYnRvcnMsIE1haGFyLQphc2h0cmEgRGVidG9ycywgVGFtaWwgTmFkdSBEZWJ0b3JzLiBUaGUgc3RhdGVzIGNhbiBhbHNvIGJlIGNsYXNzaWZpZWQgaW50byBjaXRpZXMgYW5kIHNvIG9uPC9wPgo8aDIgaWQ9ImJvb2tzLXJlZ2lzdGVycyI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNib29rcy1yZWdpc3RlcnMiPiM8L2E+IEJvb2tzICZhbXA7IFJlZ2lzdGVyczwvaDI+CjxwPkFrYXVudCBwcm92aWRlcyB5b3UgY2FwYWJpbGl0eSB0byBnZW5lcmF0ZSB2YXJpb3VzIGJvb2tzIGFuZCByZWdpc3RlcnMgZm9yIGFueSBzcGVjaWZpYwpwZXJpb2Qgdml6LiwgbW9udGgsIGRhdGUsIGFuZCB5ZWFyIGFuZCBhcyBvbiBkYXRlLiBJbiBBa2F1bnQsIG9uY2Ugdm91Y2hlciBlbnRyeSBpcyBtYWRlLCB0aGUKdHJhbnNhY3Rpb25zIGFyZSBhdXRvbWF0aWNhbGx5ICZhbXA7IGltbWVkaWF0ZWx5IGluIHRoZSBEYXkgQm9vayBhbmQgb3RoZXIgQm9va3Mgb2YgQWNjb3VudHMKd2l0aG91dCBhbnkgYWRkaXRpb25hbCBlZmZvcnQuIEFrYXVudCBhbGxvd3MgeW91IHRvIG1haW50YWluIGFuZCBnZW5lcmF0ZSBhbGwgcHJpbWFyeSBib29rcyBvZgphY2NvdW50cyBhbmQgcmVnaXN0ZXJzIGxpa2U8L3A+Cjx1bD4KPGxpPkNhc2ggQm9vazwvbGk+CjxsaT5CYW5rIEJvb2s8L2xpPgo8bGk+UHVyY2hhc2UgUmVnaXN0ZXI8L2xpPgo8bGk+U2FsZXMgUmVnaXN0ZXI8L2xpPgo8bGk+Sm91cm5hbCBSZWdpc3RlcjwvbGk+CjxsaT5EZWJpdCBOb3RlIFJlZ2lzdGVyPC9saT4KPGxpPkNyZWRpdCBOb3RlIFJlZ2lzdGVyPC9saT4KPGxpPkdlbmVyYWwgTGVkZ2VyPC9saT4KPC91bD4KPGgyIGlkPSJzdGF0ZW1lbnRzLW9mLWFjY291bnRzIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI3N0YXRlbWVudHMtb2YtYWNjb3VudHMiPiM8L2E+IFN0YXRlbWVudHMgb2YgQWNjb3VudHM8L2gyPgo8cD5Ba2F1bnQgcHJvdmlkZXMgeW91IGNhcGFiaWxpdHkgdG8gZ2VuZXJhdGUsIHByaW50LCBtYWlsIG9yIHVwbG9hZCB2YXJpb3VzIEZpbmFuY2lhbCBTdGF0ZW1lbnRzCmFuZCByZXBvcnRzIHZpei4sIEJhbGFuY2UgU2hlZXQsIFByb2ZpdCAmYW1wOyBMb3NzIEEvYywgVHJpYWwgQmFsYW5jZSwgQ2FzaCBGbG93LCBGdW5kIEZsb3csIFJlY2VpdmEtCmJsZXMsIFBheWFibGVzICZhbXA7IFN0b2NrIFN0YXRlbWVudHMgYW5kIHNvIG9uLjwvcD4KPGgyIGlkPSJyZWNlaXZhYmxlcy1hbmQtcGF5YWJsZXMtbWFuYWdlbWVudCI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNyZWNlaXZhYmxlcy1hbmQtcGF5YWJsZXMtbWFuYWdlbWVudCI+IzwvYT4gUmVjZWl2YWJsZXMgYW5kIFBheWFibGVzIE1hbmFnZW1lbnQ8L2gyPgo8cD5BY2NvdW50cyBSZWNlaXZhYmxlcyBhcmUgdGhlIGFtb3VudHMgdGhhdCB5b3UgYXJlIHRvIHJlY2VpdmUgZnJvbSB0aGUgc3VuZHJ5IGRlYnRvcnMgd2hpbGUKQWNjb3VudHMgUGF5YWJsZXMgYXJlIHRoZSBhbW91bnRzIHlvdSBoYXZlIHRvIHBheSB0byBzdW5kcnkgY3JlZGl0b3JzLiBBa2F1bnQgcHJvdmlkZXMKY29tcGxldGUgYmlsbCB3aXNlIGluZm9ybWF0aW9uIG9mIGFtb3VudHMgcmVjZWl2YWJsZSBhcyB3ZWxsIGFzIHBheWFibGUsIGVpdGhlciBvbiBwYXJ0eSB3aXNlLApncm91cCB3aXNlIG9yIEJpbGx3aXNlLiBUaGlzIGZlYXR1cmUgdHJhY2tzIGJpbGxzLCBwYXltZW50cy9yZWNlaXB0cyBpbmNsdWRpbmcgYWR2YW5jZXMgb24gb25lLXRvLQpvbmUgYmFzaXMuPC9wPgo8aDIgaWQ9ImNyZWRpdC1saW1pdHMiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjY3JlZGl0LWxpbWl0cyI+IzwvYT4gQ3JlZGl0IExpbWl0czwvaDI+CjxwPkFrYXVudCBwcm92aWRlcyB5b3Ugd2l0aCB0aGUgZmVhdHVyZSB0byBzZXQgdGhyZXNob2xkIGxpbWl0cyBmb3IgdGhlIHRyYWRpbmcgdHJhbnNhY3Rpb25zIHdpdGgKeW91ciBTdW5kcnkgRGVidG9ycy4gT24gc2V0dGluZyB0aGUgQ3JlZGl0IExpbWl0cywgdHJhbnNhY3Rpb25zIGJleW9uZCB0aGUgc3BlY2lmaWVkIGxpbWl0IGFyZQpyZXN0cmljdGVkLiBUaGlzIGZlYXR1cmUgaXMgdmVyeSBzaWduaWZpY2FudCBpbiByZWR1Y2luZyBwb3RlbnRpYWwgYmFkIGRlYnRzLjwvcD4KPGgyIGlkPSJiYW5rLXJlY29uY2lsaWF0aW9uIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI2JhbmstcmVjb25jaWxpYXRpb24iPiM8L2E+IEJhbmsgUmVjb25jaWxpYXRpb248L2gyPgo8cD5Ba2F1bnQgcHJvdmlkZXMgeW91IHRoZSBmYWNpbGl0eSB0byByZWNvbmNpbGUgdGhlIHRyYW5zYWN0aW9ucyBvZiB5b3VyIEJhbmsgQm9vayB3aXRoIHRoZSBCYW5rClN0YXRlbWVudCBhbmQgaW5zdGFudGx5IGRpc3BsYXlzIHRoZSBCYWxhbmNlIGF0IEJhbmsgYW5kIGFzIHBlciB0aGUgQmFuayBCb29rLCB0aGlzIGZhY2lsaXR5IHNpZy0KbmlmaWNhbnRseSBoZWxwcyBpbiBwbGFubmluZyB5b3VyIHBheW91dHMuIFRoZSByZWNvbmNpbGlhdGlvbiBvZiBiYW5rIHRyYW5zYWN0aW9uIHVzaW5nIHRoZQpyZWNvbmNpbGUgZmVhdHVyZSBpcyB2ZXJ5IHNpbXBsZSBhbmQgZWFzeSB0byB1c2UsIGJ5IHNpbXBseSBlbnRlcmluZyB0aGUgZGF0ZSBvZiBkZWJpdCAvIGNyZWRpdCBvZiBhCnBhcnRpY3VsYXIgdHJhbnNhY3Rpb24gaW4gdGhlIEJhbmsuPC9wPgo8aDIgaWQ9ImZsZXhpYmxlLXJlcG9ydGluZyI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNmbGV4aWJsZS1yZXBvcnRpbmciPiM8L2E+IEZsZXhpYmxlIFJlcG9ydGluZzwvaDI+CjxwPkFrYXVudCBjYW4gYmUgdXNlZCB0byBnZW5lcmF0ZSBmaW5hbmNpYWwgcmVwb3J0cywgYWNjb3VudGluZyByZXBvcnRzLCBpbnZlbnRvcnkgcmVwb3J0cywKc3RhdHV0b3J5IHJlcG9ydHMgYW5kIG1hbmFnZW1lbnQgY29udHJvbCByZXBvcnRzLjwvcD4KPGgyIGlkPSJiaXJkLXMtZXllLXZpZXctZHJpbGwtZG93bi1kaXNwbGF5Ij48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI2JpcmQtcy1leWUtdmlldy1kcmlsbC1kb3duLWRpc3BsYXkiPiM8L2E+IEJpcmQncyBleWUgVmlldy8gRHJpbGwgRG93biBEaXNwbGF5OjwvaDI+CjxwPkFrYXVudCdzIHVuaXF1ZSBmZWF0dXJlcyBwcm92aWRlIHlvdSB3aXRoIHRoZSByZXF1aXJlZCBpbmZvcm1hdGlvbiBhdCBhIGdsYW5jZS4gRm9yIGV4YW1wbGUtClJhdGlvIEFuYWx5c2lzIGFuZCBTdGF0aXN0aWNzIHByb3ZpZGUgeW91IHdpdGggd2VhbHRoIG9mIGluZm9ybWF0aW9uIGZvciBkZWNpc2lvbiBtYWtpbmcgaW4gYSBzaW5nbGUKc2NyZWVuLjwvcD4KPGgyIGlkPSJzdGF0aXN0aWNzIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI3N0YXRpc3RpY3MiPiM8L2E+IFN0YXRpc3RpY3M8L2gyPgo8aDIgaWQ9ImRhdGUtYmFzZWQtcmVwb3J0aW5nIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI2RhdGUtYmFzZWQtcmVwb3J0aW5nIj4jPC9hPiBEYXRlIGJhc2VkIFJlcG9ydGluZzwvaDI+CjxwPkluIEFrYXVudCwgeW91IGNhbiBnZW5lcmF0ZSByZXBvcnRzIGJ5IHNlbGVjdGluZyBhIHBhcnRpY3VsYXIgZGF0ZSBvciBhIGRhdGUgcmFuZ2UuIFlvdSBjYW4KYWxzbyBjb21wYXJlIHJlcG9ydHMgb2YgdHdvIHNlbGVjdGVkIHBlcmlvZHMsIG1vbnRocyBvciBmaW5hbmNpYWwgeWVhcnMuIFJlcG9ydHMgaW4gQWthdW50CmFyZSBnZW5lcmF0ZWQgYmFzZWQgb24gdGhlIHRyYW5zYWN0aW9uIGRhdGUgYW5kIG5vdCBvbiB0aGUgZGF0ZSBvZiBhY3R1YWwgZW50cnkgdGhlcmVieSBlbnN1cmluZwphY2N1cmF0ZSByZXByZXNlbnRhdGlvbiBvZiBpbmZvcm1hdGlvbi4gQWthdW50J3MgdW5pcXVlIGFuZCBzaW1wbGUgYXBwcm9hY2ggdG8gcmVjb25jaWxlCmJhbmsgc3RhdGVtZW50cyBpcyBiYXNlZCBvbiBkYXRlIG9mIHRyYW5zYWN0aW9uIGFuZCByZWFsaXNhdGlvbi48L3A+CjxoMiBpZD0idm91Y2hlci1hbmQtY2hlcXVlLXByaW50aW5nIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI3ZvdWNoZXItYW5kLWNoZXF1ZS1wcmludGluZyI+IzwvYT4gVm91Y2hlciBhbmQgQ2hlcXVlIFByaW50aW5nPC9oMj4KPHA+QWthdW50IHByb3ZpZGVzIHlvdSB3aXRoIGEgZmFjaWxpdHkgdG8gcHJpbnQgYWxsIHR5cGVzIG9mIHZvdWNoZXJzLiBZb3UgY2FuIHByaW50IGEgdm91Y2hlciBvbgpzYXZlIG9yIHlvdSBjYW4gcHJpbnQgaXQgbGF0ZXIuIEl0IGlzIGFsc28gcG9zc2libGUgdG8gcHJpbnQgZm9ybWFsIHJlY2VpcHRzIGFuZCBjaGVxdWVzLiBUaGUgcmVhbApiZW5lZml0IGZvciBhIHVzZXIgaXMgdGhhdCB5b3UgaXNzdWUgY2hlcXVlcyB0byBwYXJ0aWVzIG9ubHkgYWZ0ZXIgYWNjb3VudGluZyB0aGUgcGF5bWVudCB0cmFuc2FjLQp0aW9uczwvcD4KPC9Db250ZW50U2xvdHNEaXN0cmlidXRvcj4K"},null]}
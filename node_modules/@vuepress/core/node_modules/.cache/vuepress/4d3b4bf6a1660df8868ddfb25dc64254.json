{"remainingRequest":"/home/vim/Code/akaunt/akaunt-doc/node_modules/vue-loader/lib/index.js??ref--1-1!/home/vim/Code/akaunt/akaunt-doc/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/home/vim/Code/akaunt/akaunt-doc/docs/guide/The Technology Advantage of Akaunt.md?vue&type=template&id=48e47921&","dependencies":[{"path":"/home/vim/Code/akaunt/akaunt-doc/docs/guide/The Technology Advantage of Akaunt.md","mtime":1686221695238},{"path":"/home/vim/Code/akaunt/akaunt-doc/node_modules/cache-loader/dist/cjs.js","mtime":1686221702879},{"path":"/home/vim/Code/akaunt/akaunt-doc/node_modules/cache-loader/dist/cjs.js","mtime":1686221702879},{"path":"/home/vim/Code/akaunt/akaunt-doc/node_modules/babel-loader/lib/index.js","mtime":1686221703032},{"path":"/home/vim/Code/akaunt/akaunt-doc/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1686221703475},{"path":"/home/vim/Code/akaunt/akaunt-doc/node_modules/cache-loader/dist/cjs.js","mtime":1686221702879},{"path":"/home/vim/Code/akaunt/akaunt-doc/node_modules/vue-loader/lib/index.js","mtime":1686221703162},{"path":"/home/vim/Code/akaunt/akaunt-doc/node_modules/@vuepress/markdown-loader/index.js","mtime":1686221701469}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}